# Generated by Django 3.2.20 on 2025-08-20 20:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PredictionCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=255, unique=True)),
                ('cache_data', models.JSONField()),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10)),
                ('timeframe', models.CharField(choices=[('1d', '1 Day'), ('1w', '1 Week'), ('1m', '1 Month')], max_length=2)),
                ('historical_data', models.JSONField()),
                ('predicted_data', models.JSONField()),
                ('trend_direction', models.CharField(choices=[('UP', 'Up'), ('DOWN', 'Down'), ('SIDEWAYS', 'Sideways')], max_length=10)),
                ('confidence_score', models.FloatField()),
                ('recommendation', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold')], max_length=4)),
                ('model_used', models.CharField(default='LSTM-Hybrid', max_length=50)),
                ('current_price', models.FloatField()),
                ('predicted_end_price', models.FloatField()),
                ('expected_return', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('symbol', 'timeframe', 'created_at')},
            },
        ),
    ]
